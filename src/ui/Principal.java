/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import dao.ClientDAO;
import dao.EmployeeDAO;
import dao.OrderDAO;
import dao.PlatesDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.Client;
import model.Order;
import model.Plate;

/**
 *
 * @author Vin√≠cius Giles
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        try {
            preencherTabelaClientes();
            preencherTabelaEmpregados();
            preencherTabelaPratos();
            preencherTabelaPedidos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    public void preencherTabelaEmpregados() throws Exception{
        Connection conn = new ConnectionDB().getConnection();
        List<Employee> EmployeeList = EmployeeDAO.ListarTodosEmpregados(conn);
        DefaultTableModel model = (DefaultTableModel)TabelaEmpregados.getModel();
        Object[] data = new Object[6];
        for(int i = 0; i < EmployeeList.size(); i++){
            data[0] = EmployeeList.get(i).getCPF();         
            data[1] = EmployeeList.get(i).getRG();
            data[2] = EmployeeList.get(i).getNome();
            data[3] = EmployeeList.get(i).getSexo();
            data[4] = EmployeeList.get(i).getSalario();
            data[5] = EmployeeList.get(i).getGerenteCpf();
            model.addRow(data);
        }
        conn.close();
    }
    
    public void preencherBuscarTabelaEmpregados(String cpf) throws Exception{
        Connection conn = new ConnectionDB().getConnection();
        List<Employee> EmployeeList = EmployeeDAO.BuscarEmpregadoPorCpf(conn, cpf);
        DefaultTableModel model = (DefaultTableModel)TabelaEmpregados.getModel();
        Object[] data = new Object[6];
        for(int i = 0; i < EmployeeList.size(); i++){
            data[0] = EmployeeList.get(i).getCPF();         
            data[1] = EmployeeList.get(i).getRG();
            data[2] = EmployeeList.get(i).getNome();
            data[3] = EmployeeList.get(i).getSexo();
            data[4] = EmployeeList.get(i).getSalario();
            data[5] = EmployeeList.get(i).getGerenteCpf();
            model.addRow(data);
        }
        conn.close();
    }
    
    public void preencherTabelaClientes() throws Exception{
        Connection conn = new ConnectionDB().getConnection();
        List<Client> ClientList = ClientDAO.ListarTodosClientes(conn);
        DefaultTableModel model = (DefaultTableModel)TabelaClientes.getModel();
        Object[] data = new Object[6];
        for(int i = 0; i < ClientList.size();i++){
            data[0] = ClientList.get(i).getCPF();         
            data[1] = ClientList.get(i).getRG();
            data[2] = ClientList.get(i).getNome();
            model.addRow(data);
        }
        conn.close();
    }
    
    public void preencherTabelaPratos() throws Exception{
        Connection conn = new ConnectionDB().getConnection();
        List<Plate> PlateList = PlatesDAO.ListarPratos(conn);
        DefaultTableModel model = (DefaultTableModel)TabelaPratos.getModel();
        Object[] data = new Object[6];
        for(int i = 0; i < PlateList.size();i++){
            data[0] = PlateList.get(i).getNumero();         
            data[1] = PlateList.get(i).getPreco();
            data[2] = PlateList.get(i).getNome();
            model.addRow(data);
        }
        conn.close();
    }
    
     public void preencherTabelaPedidos() throws Exception{
        Connection conn = new ConnectionDB().getConnection();
        List<Order> OrderList = OrderDAO.ListarPedidos(conn);
        DefaultTableModel model = (DefaultTableModel)TabelaPedidos.getModel();
        Object[] data = new Object[4];
        for(int i = 0; i < OrderList.size(); i++){
            data[0] = OrderList.get(i).getData();         
            data[1] = OrderList.get(i).getCpfGarcom();
            data[2] = OrderList.get(i).getCpfCliente();
            data[3] = OrderList.get(i).getNumeroPrato();
            model.addRow(data);
        }
        conn.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        BotaoNovoEmpregado = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaEmpregados = new javax.swing.JTable();
        BotaoAtualizarListaEmpregado = new javax.swing.JButton();
        BotaoRemoverEmpregado = new javax.swing.JButton();
        BotaoEditarEmpregado = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        BuscarCpfEmpregado = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaClientes = new javax.swing.JTable();
        BotaoNovoCliente = new javax.swing.JButton();
        AtualizarListaCliente = new javax.swing.JButton();
        BotaoNovoPedido = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TabelaPedidos = new javax.swing.JTable();
        BotaoAtualizarPedidos = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelaPratos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotaoNovoEmpregado.setText("Novo empregado");
        BotaoNovoEmpregado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoNovoEmpregadoActionPerformed(evt);
            }
        });

        TabelaEmpregados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "RG", "Nome", "Sexo", "Salario", "CPF do Gerente"
            }
        ));
        jScrollPane2.setViewportView(TabelaEmpregados);

        BotaoAtualizarListaEmpregado.setText("Atualizar");
        BotaoAtualizarListaEmpregado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAtualizarListaEmpregadoActionPerformed(evt);
            }
        });

        BotaoRemoverEmpregado.setText("Remover");
        BotaoRemoverEmpregado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoRemoverEmpregadoActionPerformed(evt);
            }
        });

        BotaoEditarEmpregado.setText("Editar");
        BotaoEditarEmpregado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoEditarEmpregadoActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar CPF");

        BuscarCpfEmpregado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BuscarCpfEmpregadoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BotaoNovoEmpregado)
                        .addGap(18, 18, 18)
                        .addComponent(BotaoAtualizarListaEmpregado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotaoEditarEmpregado)
                        .addGap(18, 18, 18)
                        .addComponent(BotaoRemoverEmpregado))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(BuscarCpfEmpregado, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(BuscarCpfEmpregado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoNovoEmpregado)
                    .addComponent(BotaoAtualizarListaEmpregado)
                    .addComponent(BotaoRemoverEmpregado)
                    .addComponent(BotaoEditarEmpregado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Empregados", jPanel1);

        TabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "RG", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaClientes);

        BotaoNovoCliente.setText("Novo cliente");
        BotaoNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoNovoClienteActionPerformed(evt);
            }
        });

        AtualizarListaCliente.setText("Atualizar");
        AtualizarListaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarListaClienteActionPerformed(evt);
            }
        });

        BotaoNovoPedido.setText("Novo pedido");
        BotaoNovoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoNovoPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(BotaoNovoCliente)
                        .addGap(18, 18, 18)
                        .addComponent(AtualizarListaCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotaoNovoPedido)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoNovoCliente)
                    .addComponent(AtualizarListaCliente)
                    .addComponent(BotaoNovoPedido))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clientes", jPanel2);

        TabelaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "CPF do Gar√ßom", "CPF do Cliente", "N√∫mero do Prato"
            }
        ));
        jScrollPane4.setViewportView(TabelaPedidos);
        if (TabelaPedidos.getColumnModel().getColumnCount() > 0) {
            TabelaPedidos.getColumnModel().getColumn(0).setHeaderValue("Data");
        }

        BotaoAtualizarPedidos.setText("Atualizar");
        BotaoAtualizarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAtualizarPedidosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(BotaoAtualizarPedidos)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotaoAtualizarPedidos)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pedidos", jPanel4);

        TabelaPratos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N√∫mero", "Pre√ßo", "Nome"
            }
        ));
        jScrollPane3.setViewportView(TabelaPratos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Pratos", jPanel3);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Restaurante Sonegators");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoNovoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoNovoPedidoActionPerformed
        // TODO add your handling code here:
        String cpfCliente = (String) TabelaClientes.getValueAt(TabelaClientes.getSelectedRow(), 0);
        JFrame popupCriacaoPedido = new CriarPedido(cpfCliente);
        popupCriacaoPedido.setVisible(true);
    }//GEN-LAST:event_BotaoNovoPedidoActionPerformed

    private void AtualizarListaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarListaClienteActionPerformed
        // TODO add your handling code here:
        DeleteLista(TabelaClientes);
        try {
            preencherTabelaClientes();
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AtualizarListaClienteActionPerformed

    private void BotaoNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoNovoClienteActionPerformed
        // TODO add your handling code here:
        JFrame popupCriacaoCliente = new CriarCliente();
        popupCriacaoCliente.setVisible(true);
    }//GEN-LAST:event_BotaoNovoClienteActionPerformed

    private void BotaoEditarEmpregadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoEditarEmpregadoActionPerformed
        // TODO add your handling code here:
        Connection conn;
        try {
            conn = new ConnectionDB().getConnection();
            String cpfEmpregado = (String) TabelaEmpregados.getValueAt(TabelaEmpregados.getSelectedRow(), 0);
            Employee emp = EmployeeDAO.DetalhesEmpregado(conn, cpfEmpregado);

            JFrame popupEdicaoEmpregado = new EditarEmpregado(emp);
            popupEdicaoEmpregado.setVisible(true);

            //EmployeeDAO.EditarEmpregadoPorCpf(conn, cpfEmpregado);

            DeleteLista(TabelaEmpregados);
            try {
                preencherTabelaEmpregados();
            } catch (Exception ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoEditarEmpregadoActionPerformed

    private void BotaoRemoverEmpregadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoRemoverEmpregadoActionPerformed
        // TODO add your handling code here:
        Connection conn;
        try {
            conn = new ConnectionDB().getConnection();
            String cpfEmpregado = (String) TabelaEmpregados.getValueAt(TabelaEmpregados.getSelectedRow(), 0);
            EmployeeDAO.RemoverEmpregadoPorCpf(conn, cpfEmpregado);

            DeleteLista(TabelaEmpregados);
            try {
                preencherTabelaEmpregados();
            } catch (Exception ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null, "Empregado removido com sucesso.");
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoRemoverEmpregadoActionPerformed

    private void BotaoAtualizarListaEmpregadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAtualizarListaEmpregadoActionPerformed
        DeleteLista(TabelaEmpregados);
        try {
            preencherTabelaEmpregados();
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoAtualizarListaEmpregadoActionPerformed

    private void BotaoNovoEmpregadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoNovoEmpregadoActionPerformed
        // TODO add your handling code here:
        JFrame popupCriacaoEmpregado = new CriarEmpregado();
        popupCriacaoEmpregado.setVisible(true);
    }//GEN-LAST:event_BotaoNovoEmpregadoActionPerformed

    private void BotaoAtualizarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAtualizarPedidosActionPerformed
        // TODO add your handling code here:
        DeleteLista(TabelaPedidos);
        try {
            preencherTabelaPedidos();
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoAtualizarPedidosActionPerformed

    private void BuscarCpfEmpregadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscarCpfEmpregadoKeyPressed
        // TODO add your handling code here:
        DeleteLista(TabelaEmpregados);
        try {
            preencherBuscarTabelaEmpregados(BuscarCpfEmpregado.getText());
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BuscarCpfEmpregadoKeyPressed

    public void DeleteLista(JTable tabela) {
        try {
            // TODO add your handling code here:
            DefaultTableModel tableModel = (DefaultTableModel) tabela.getModel();
            tableModel.getDataVector().removeAllElements();
            revalidate();
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
  
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AtualizarListaCliente;
    private javax.swing.JButton BotaoAtualizarListaEmpregado;
    private javax.swing.JButton BotaoAtualizarPedidos;
    private javax.swing.JButton BotaoEditarEmpregado;
    private javax.swing.JButton BotaoNovoCliente;
    private javax.swing.JButton BotaoNovoEmpregado;
    private javax.swing.JButton BotaoNovoPedido;
    private javax.swing.JButton BotaoRemoverEmpregado;
    private javax.swing.JTextField BuscarCpfEmpregado;
    private javax.swing.JTable TabelaClientes;
    private javax.swing.JTable TabelaEmpregados;
    private javax.swing.JTable TabelaPedidos;
    private javax.swing.JTable TabelaPratos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
